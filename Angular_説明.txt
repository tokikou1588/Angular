Angular的??地址	
	npm config get registry
	https://registry.npmjs.org/
angular 安装的?候，需要??  nodejs 的版本
全局的安装路径都是安装在
	C:\Users\Administrator\AppData\Roaming\npm
	
npm i -g !angular/cli
安装好之后文件下面会有?几个文件
	C:\Users\Administrator\AppData\Roaming\npm\ng.cmd
	C:\Users\Administrator\AppData\Roaming\npm\ng.ps1
	C:\Users\Administrator\AppData\Roaming\npm\node_modules
	C:\Users\Administrator\AppData\Roaming\npm\ng

项目路径
	D:\Project\Angular
	
CMD---> npm start ---> http://127.0.0.1:4200/  确认项目是否正常启动

<html lang="en"> ---> en是代表英文

Modle 	模型
Module 	模块 node.js   ES6    NG-->Angular 
Modal 	模态对话框

Angular项目启动过程分析
	1）angular。json NG项目的配置文件
		index；./src/index.html		<app-root></app-root>
		main；./src/main.ts
	2)main.js --> bootstrapModule(AppModule) 
		bootstrap-->引导启动 Module-->模块 AppModule-->app模块
	3)app.module.ts--> boostrap:[AppComponent]
	4)app.component.ts-->selector:'app-root'
						>templateUrl:'app.component.html'
	5)app.component.html-->HTML片段
2.Angular核心概念之一：模块
	Module：不同于Node.js或者ES6 中的模块的模块，NG中的模块就是一个抽象容器，用于对组件进行分组
	整个应用初始时只有一个主模板： AppModule

3.Angular核心概念之二：组件
	组件：是一段可以反复使用的页面片段，如页头，轮播，手风琴
	组件（component） = 模板(Templete) + 脚本(Script) + 样式(Style)
	提示: NG中，任何一个组件都必须声明在一个模块中！
	自定义组件步骤
		1；创建组件class
			@Component({
			     selector:'myc01',//选择器 属性的话-->[mytitle] , 元素的话-->mytitle, class的话--> .mytitle
			     template:'<h2>我的组件C01</h2><hr>' // 模板
	 		})
			export class MyC01Component{
			
			}
		
		2；在某一个模块中注册组件 class 
			@NgModule({
			  declarations: [   // declarations:宣言/声明/宣称
			    AppComponent,
			    MyC01Component,
			  ],
		3：使用已经注册过的组件	
			<h2>我的Angular项目01</h2>
			<hr>
			<myc01></myc01>
Angular 提供的创建组件的简化工具	generate-->生成
	Angular安装可以使用		ng g component 组件名
	Angular未安装可以使用 	npx ng g component 组件名
Node.js 官方安装的工具
	npm；第三方模块的维护工具
	npx；第三方可执行文件的执行工具，NodePackage Executor
	npx 可用于执行当前项目中 node_modules/.bin 目录下的可执行文件

4.Angular核心概念之三：数据绑定
	1).HTML绑定：{{ NG表达式 }}
		测试：NG表达式中可以执行哪些代码？
		算术运算
		比较运算
		逻辑运算
		三目运算
		调用函数
		创建对象  ----> NO
		JSON序列化，JSON.string	----> NO
	2）属性绑定			Vue.js--> v-bind 
		形式 1；直接在属性上{{}} --》<p title="{{uname}}">
		形式 2：直接在属性上[[]]	<p [title]="uname">
		[title]="'当前购买数量:'+count" ---> 绑定常量的话，必须加 '常量'
		 <img [src]="'../assets/'+imgUrl" alt="">
		 注意；属性绑定通常赋值为变量，如果赋值为常量（如字符串常量）
		 必须用引号括起来，如 <img [src]="'../assets/'+imgUrl" alt="">
	3）事件绑定			Vue.js: v-on 
		 <button (click)="jianshao()">
		 注意；事件名用（）括起来，处理函数名后必须添加（）
	4）指令绑定
		Vue.js--> v-on,v-bind,v-for,v-if,v-show
		1；循环绑定；*ngFor
			<ANY *ngFor = "let 临时变量 of 数据">{{e}}</ANY>
			<ANY *ngFor = "let 临时变量 of 数据; let i = index;">{{i}}-{{e}}</ANY>
			<ANY *ngFor = "let 临时变量 of 数据; index as i">{{i}}-{{e}}</ANY>
		2：选择绑定；*ngif
			<ANY *ngIf = "布尔表达式">
			说明；如果为false的话，当前元素从 DOM树上删除
		3；样式绑定 [ngStyle]
			说明；ngstyle绑定的值必须是一个对象，对象的属性就是css就是样式名
	5）双向数据绑定
	
assets --> 资源目录








